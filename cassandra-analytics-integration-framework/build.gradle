/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import java.nio.file.Paths

project(':cassandra-analytics-integration-framework') {
    apply(plugin: 'java-library')
    apply(plugin: 'com.github.johnrengelman.shadow')

    ext.dtestJar = System.getenv("DTEST_JAR") ?: "dtest-4.1.4.jar" // latest supported Cassandra build is 4.1
    def dtestJarFullPath = "${dependencyLocation}${ext.dtestJar}"

    test {
        useJUnitPlatform()
    }

    dependencies {

        // These dependencies (sidecar + dtest jars) must be built by running `scripts/build-dependencies.sh`
        implementation(group: 'org.apache.cassandra.sidecar', name: 'common', version: "${sidecarVersion}")
        implementation(group: 'org.apache.cassandra.sidecar', name: 'adapters-base', version: "${sidecarVersion}")
        // The server itself
        implementation (group: "org.apache.cassandra", name: "cassandra-sidecar", version: "${sidecarVersion}") {
            exclude(group: 'org.apache.logging.log4j')
            exclude(group: 'org.slf4j')
            exclude(group: 'ch.qos.logback')
        }

        File dtestJarFile = new File(dtestJarFullPath)
        assert dtestJarFile.exists()
        println("Using DTest jar: " + dtestJarFullPath)
        shadow(files("${dtestJarFullPath}"))
        shadow("org.apache.cassandra:dtest-api:0.0.16")
        // Needed by the Cassandra dtest framework
        // JUnit
        implementation("org.junit.jupiter:junit-jupiter-api:${project.junitVersion}")
        implementation("org.junit.jupiter:junit-jupiter-params:${project.junitVersion}")
        implementation("org.junit.jupiter:junit-jupiter-engine:${project.junitVersion}")

        implementation("org.junit.vintage:junit-vintage-engine:${junitVersion}")
        implementation('org.mockito:mockito-inline:4.10.0')
        implementation("org.assertj:assertj-core:3.24.2")

        shadow('com.datastax.cassandra:cassandra-driver-core:3.9.0')

        shadow("com.google.guava:guava:27.0.1-jre")
        shadow('com.google.inject:guice:4.2.2')
        shadow("io.vertx:vertx-web:${project.vertxVersion}") {
            exclude group: 'junit', module: 'junit'
        }
        shadow("io.vertx:vertx-web-client:${project.vertxVersion}")
        shadow("io.vertx:vertx-junit5:${project.vertxVersion}")
    }

    shadowJar {
        zip64 true
        relocate('org.apache.cassandra.sidecar', 'o.a.c.analytics.sidecar.shaded.testing') {
            exclude '%regex[org.apache.cassandra.sidecar.testing.*]'
        }
    }
}
